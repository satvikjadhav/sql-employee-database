# A Docker Compose must always start with the version tag.
# We use '3' because it's the last version.
version: '3'

# You should know that Docker Compose works with services.
# 1 service = 1 container.
# For example, a service, a server, a client, a database...
# We use the keyword 'services' to start to create services.
services:
  # The name of our service is "database"
  # but you can use the name of your choice.
  # Note: This may change the commands you are going to use a little bit.
  database:
    # Official Postgres image from DockerHub (we use the last version)
    image: 'postgres:latest'

    # By default, a Postgres database is running on the 5432 port.
    # If we want to access the database from our computer (outside the container),
    # we must share the port with our computer's port.
    # The syntax is [port we want on our machine]:[port we want to retrieve in the container]
    # Note: You are free to change your computer's port,
    # but take into consideration that it will change the way
    # you are connecting to your database.

    environment:
      POSTGRES_USER: username # The PostgreSQL user (useful to connect to the database)
      POSTGRES_PASSWORD: password # The PostgreSQL password (useful to connect to the database)
      POSTGRES_DB: emp_db # The PostgreSQL default database (automatically created at first launch)
  
  # spinning up a pgadmin service so that we can interact with our postgres database with more ease
  pgadmin:
    image: dpage/pgadmin4

    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=password

  # This service will be the one where we run our python code 
  # and be treated as our development enviornment instead of using our personal computer
  devenv:
    image: 'ubuntu:latest'
    
    depends_on:
      - database
      - pgadmin

    working_dir: /usr/app/
    
    volumes:
      - ~/data/:/usr/app/data/:ro

    command: cd ~/usr/app/data && sudo apt update && sudo apt upgrade -y && pip install -r requirements.txt
    